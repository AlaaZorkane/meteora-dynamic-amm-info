/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';
import {
  getDepegTypeDecoder,
  getDepegTypeEncoder,
  type DepegType,
  type DepegTypeArgs,
} from '.';

/** Contains information for depeg pool */
export type Depeg = {
  /** The virtual price of staking / interest bearing token */
  baseVirtualPrice: bigint;
  /** The last time base_virtual_price is updated */
  baseCacheUpdated: bigint;
  /** Type of the depeg pool */
  depegType: DepegType;
};

export type DepegArgs = {
  /** The virtual price of staking / interest bearing token */
  baseVirtualPrice: number | bigint;
  /** The last time base_virtual_price is updated */
  baseCacheUpdated: number | bigint;
  /** Type of the depeg pool */
  depegType: DepegTypeArgs;
};

export function getDepegEncoder(): Encoder<DepegArgs> {
  return getStructEncoder([
    ['baseVirtualPrice', getU64Encoder()],
    ['baseCacheUpdated', getU64Encoder()],
    ['depegType', getDepegTypeEncoder()],
  ]);
}

export function getDepegDecoder(): Decoder<Depeg> {
  return getStructDecoder([
    ['baseVirtualPrice', getU64Decoder()],
    ['baseCacheUpdated', getU64Decoder()],
    ['depegType', getDepegTypeDecoder()],
  ]);
}

export function getDepegCodec(): Codec<DepegArgs, Depeg> {
  return combineCodec(getDepegEncoder(), getDepegDecoder());
}
