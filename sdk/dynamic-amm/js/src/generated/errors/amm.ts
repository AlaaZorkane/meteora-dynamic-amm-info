/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/web3.js';
import { AMM_PROGRAM_ADDRESS } from '../programs';

/** MathOverflow: Math operation overflow */
export const AMM_ERROR__MATH_OVERFLOW = 0x1770; // 6000
/** InvalidFee: Invalid fee setup */
export const AMM_ERROR__INVALID_FEE = 0x1771; // 6001
/** InvalidInvariant: Invalid invariant d */
export const AMM_ERROR__INVALID_INVARIANT = 0x1772; // 6002
/** FeeCalculationFailure: Fee calculation failure */
export const AMM_ERROR__FEE_CALCULATION_FAILURE = 0x1773; // 6003
/** ExceededSlippage: Exceeded slippage tolerance */
export const AMM_ERROR__EXCEEDED_SLIPPAGE = 0x1774; // 6004
/** InvalidCalculation: Invalid curve calculation */
export const AMM_ERROR__INVALID_CALCULATION = 0x1775; // 6005
/** ZeroTradingTokens: Given pool token amount results in zero trading tokens */
export const AMM_ERROR__ZERO_TRADING_TOKENS = 0x1776; // 6006
/** ConversionError: Math conversion overflow */
export const AMM_ERROR__CONVERSION_ERROR = 0x1777; // 6007
/** FaultyLpMint: LP mint authority must be 'A' vault lp, without freeze authority, and 0 supply */
export const AMM_ERROR__FAULTY_LP_MINT = 0x1778; // 6008
/** MismatchedTokenMint: Token mint mismatched */
export const AMM_ERROR__MISMATCHED_TOKEN_MINT = 0x1779; // 6009
/** MismatchedLpMint: LP mint mismatched */
export const AMM_ERROR__MISMATCHED_LP_MINT = 0x177a; // 6010
/** MismatchedOwner: Invalid lp token owner */
export const AMM_ERROR__MISMATCHED_OWNER = 0x177b; // 6011
/** InvalidVaultAccount: Invalid vault account */
export const AMM_ERROR__INVALID_VAULT_ACCOUNT = 0x177c; // 6012
/** InvalidVaultLpAccount: Invalid vault lp account */
export const AMM_ERROR__INVALID_VAULT_LP_ACCOUNT = 0x177d; // 6013
/** InvalidPoolLpMintAccount: Invalid pool lp mint account */
export const AMM_ERROR__INVALID_POOL_LP_MINT_ACCOUNT = 0x177e; // 6014
/** PoolDisabled: Pool disabled */
export const AMM_ERROR__POOL_DISABLED = 0x177f; // 6015
/** InvalidAdminAccount: Invalid admin account */
export const AMM_ERROR__INVALID_ADMIN_ACCOUNT = 0x1780; // 6016
/** InvalidProtocolFeeAccount: Invalid protocol fee account */
export const AMM_ERROR__INVALID_PROTOCOL_FEE_ACCOUNT = 0x1781; // 6017
/** SameAdminAccount: Same admin account */
export const AMM_ERROR__SAME_ADMIN_ACCOUNT = 0x1782; // 6018
/** IdenticalSourceDestination: Identical user source and destination token account */
export const AMM_ERROR__IDENTICAL_SOURCE_DESTINATION = 0x1783; // 6019
/** ApyCalculationError: Apy calculation error */
export const AMM_ERROR__APY_CALCULATION_ERROR = 0x1784; // 6020
/** InsufficientSnapshot: Insufficient virtual price snapshot */
export const AMM_ERROR__INSUFFICIENT_SNAPSHOT = 0x1785; // 6021
/** NonUpdatableCurve: Current curve is non-updatable */
export const AMM_ERROR__NON_UPDATABLE_CURVE = 0x1786; // 6022
/** MisMatchedCurve: New curve is mismatched with old curve */
export const AMM_ERROR__MIS_MATCHED_CURVE = 0x1787; // 6023
/** InvalidAmplification: Amplification is invalid */
export const AMM_ERROR__INVALID_AMPLIFICATION = 0x1788; // 6024
/** UnsupportedOperation: Operation is not supported */
export const AMM_ERROR__UNSUPPORTED_OPERATION = 0x1789; // 6025
/** ExceedMaxAChanges: Exceed max amplification changes */
export const AMM_ERROR__EXCEED_MAX_A_CHANGES = 0x178a; // 6026
/** InvalidRemainingAccountsLen: Invalid remaining accounts length */
export const AMM_ERROR__INVALID_REMAINING_ACCOUNTS_LEN = 0x178b; // 6027
/** InvalidRemainingAccounts: Invalid remaining account */
export const AMM_ERROR__INVALID_REMAINING_ACCOUNTS = 0x178c; // 6028
/** MismatchedDepegMint: Token mint B doesn't matches depeg type token mint */
export const AMM_ERROR__MISMATCHED_DEPEG_MINT = 0x178d; // 6029
/** InvalidApyAccount: Invalid APY account */
export const AMM_ERROR__INVALID_APY_ACCOUNT = 0x178e; // 6030
/** InvalidTokenMultiplier: Invalid token multiplier */
export const AMM_ERROR__INVALID_TOKEN_MULTIPLIER = 0x178f; // 6031
/** InvalidDepegInformation: Invalid depeg information */
export const AMM_ERROR__INVALID_DEPEG_INFORMATION = 0x1790; // 6032
/** UpdateTimeConstraint: Update time constraint violated */
export const AMM_ERROR__UPDATE_TIME_CONSTRAINT = 0x1791; // 6033
/** ExceedMaxFeeBps: Exceeded max fee bps */
export const AMM_ERROR__EXCEED_MAX_FEE_BPS = 0x1792; // 6034
/** InvalidAdmin: Invalid admin */
export const AMM_ERROR__INVALID_ADMIN = 0x1793; // 6035
/** PoolIsNotPermissioned: Pool is not permissioned */
export const AMM_ERROR__POOL_IS_NOT_PERMISSIONED = 0x1794; // 6036
/** InvalidDepositAmount: Invalid deposit amount */
export const AMM_ERROR__INVALID_DEPOSIT_AMOUNT = 0x1795; // 6037
/** InvalidFeeOwner: Invalid fee owner */
export const AMM_ERROR__INVALID_FEE_OWNER = 0x1796; // 6038
/** NonDepletedPool: Pool is not depleted */
export const AMM_ERROR__NON_DEPLETED_POOL = 0x1797; // 6039
/** AmountNotPeg: Token amount is not 1:1 */
export const AMM_ERROR__AMOUNT_NOT_PEG = 0x1798; // 6040
/** AmountIsZero: Amount is zero */
export const AMM_ERROR__AMOUNT_IS_ZERO = 0x1799; // 6041
/** TypeCastFailed: Type cast error */
export const AMM_ERROR__TYPE_CAST_FAILED = 0x179a; // 6042
/** AmountIsNotEnough: Amount is not enough */
export const AMM_ERROR__AMOUNT_IS_NOT_ENOUGH = 0x179b; // 6043
/** InvalidActivationDuration: Invalid activation duration */
export const AMM_ERROR__INVALID_ACTIVATION_DURATION = 0x179c; // 6044
/** PoolIsNotLaunchPool: Pool is not launch pool */
export const AMM_ERROR__POOL_IS_NOT_LAUNCH_POOL = 0x179d; // 6045
/** UnableToModifyActivationPoint: Unable to modify activation point */
export const AMM_ERROR__UNABLE_TO_MODIFY_ACTIVATION_POINT = 0x179e; // 6046
/** InvalidAuthorityToCreateThePool: Invalid authority to create the pool */
export const AMM_ERROR__INVALID_AUTHORITY_TO_CREATE_THE_POOL = 0x179f; // 6047
/** InvalidActivationType: Invalid activation type */
export const AMM_ERROR__INVALID_ACTIVATION_TYPE = 0x17a0; // 6048
/** InvalidActivationPoint: Invalid activation point */
export const AMM_ERROR__INVALID_ACTIVATION_POINT = 0x17a1; // 6049
/** PreActivationSwapStarted: Pre activation swap window started */
export const AMM_ERROR__PRE_ACTIVATION_SWAP_STARTED = 0x17a2; // 6050
/** InvalidPoolType: Invalid pool type */
export const AMM_ERROR__INVALID_POOL_TYPE = 0x17a3; // 6051
/** InvalidQuoteMint: Quote token must be SOL,USDC */
export const AMM_ERROR__INVALID_QUOTE_MINT = 0x17a4; // 6052

export type AmmError =
  | typeof AMM_ERROR__AMOUNT_IS_NOT_ENOUGH
  | typeof AMM_ERROR__AMOUNT_IS_ZERO
  | typeof AMM_ERROR__AMOUNT_NOT_PEG
  | typeof AMM_ERROR__APY_CALCULATION_ERROR
  | typeof AMM_ERROR__CONVERSION_ERROR
  | typeof AMM_ERROR__EXCEEDED_SLIPPAGE
  | typeof AMM_ERROR__EXCEED_MAX_A_CHANGES
  | typeof AMM_ERROR__EXCEED_MAX_FEE_BPS
  | typeof AMM_ERROR__FAULTY_LP_MINT
  | typeof AMM_ERROR__FEE_CALCULATION_FAILURE
  | typeof AMM_ERROR__IDENTICAL_SOURCE_DESTINATION
  | typeof AMM_ERROR__INSUFFICIENT_SNAPSHOT
  | typeof AMM_ERROR__INVALID_ACTIVATION_DURATION
  | typeof AMM_ERROR__INVALID_ACTIVATION_POINT
  | typeof AMM_ERROR__INVALID_ACTIVATION_TYPE
  | typeof AMM_ERROR__INVALID_ADMIN
  | typeof AMM_ERROR__INVALID_ADMIN_ACCOUNT
  | typeof AMM_ERROR__INVALID_AMPLIFICATION
  | typeof AMM_ERROR__INVALID_APY_ACCOUNT
  | typeof AMM_ERROR__INVALID_AUTHORITY_TO_CREATE_THE_POOL
  | typeof AMM_ERROR__INVALID_CALCULATION
  | typeof AMM_ERROR__INVALID_DEPEG_INFORMATION
  | typeof AMM_ERROR__INVALID_DEPOSIT_AMOUNT
  | typeof AMM_ERROR__INVALID_FEE
  | typeof AMM_ERROR__INVALID_FEE_OWNER
  | typeof AMM_ERROR__INVALID_INVARIANT
  | typeof AMM_ERROR__INVALID_POOL_LP_MINT_ACCOUNT
  | typeof AMM_ERROR__INVALID_POOL_TYPE
  | typeof AMM_ERROR__INVALID_PROTOCOL_FEE_ACCOUNT
  | typeof AMM_ERROR__INVALID_QUOTE_MINT
  | typeof AMM_ERROR__INVALID_REMAINING_ACCOUNTS
  | typeof AMM_ERROR__INVALID_REMAINING_ACCOUNTS_LEN
  | typeof AMM_ERROR__INVALID_TOKEN_MULTIPLIER
  | typeof AMM_ERROR__INVALID_VAULT_ACCOUNT
  | typeof AMM_ERROR__INVALID_VAULT_LP_ACCOUNT
  | typeof AMM_ERROR__MATH_OVERFLOW
  | typeof AMM_ERROR__MIS_MATCHED_CURVE
  | typeof AMM_ERROR__MISMATCHED_DEPEG_MINT
  | typeof AMM_ERROR__MISMATCHED_LP_MINT
  | typeof AMM_ERROR__MISMATCHED_OWNER
  | typeof AMM_ERROR__MISMATCHED_TOKEN_MINT
  | typeof AMM_ERROR__NON_DEPLETED_POOL
  | typeof AMM_ERROR__NON_UPDATABLE_CURVE
  | typeof AMM_ERROR__POOL_DISABLED
  | typeof AMM_ERROR__POOL_IS_NOT_LAUNCH_POOL
  | typeof AMM_ERROR__POOL_IS_NOT_PERMISSIONED
  | typeof AMM_ERROR__PRE_ACTIVATION_SWAP_STARTED
  | typeof AMM_ERROR__SAME_ADMIN_ACCOUNT
  | typeof AMM_ERROR__TYPE_CAST_FAILED
  | typeof AMM_ERROR__UNABLE_TO_MODIFY_ACTIVATION_POINT
  | typeof AMM_ERROR__UNSUPPORTED_OPERATION
  | typeof AMM_ERROR__UPDATE_TIME_CONSTRAINT
  | typeof AMM_ERROR__ZERO_TRADING_TOKENS;

let ammErrorMessages: Record<AmmError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  ammErrorMessages = {
    [AMM_ERROR__AMOUNT_IS_NOT_ENOUGH]: `Amount is not enough`,
    [AMM_ERROR__AMOUNT_IS_ZERO]: `Amount is zero`,
    [AMM_ERROR__AMOUNT_NOT_PEG]: `Token amount is not 1:1`,
    [AMM_ERROR__APY_CALCULATION_ERROR]: `Apy calculation error`,
    [AMM_ERROR__CONVERSION_ERROR]: `Math conversion overflow`,
    [AMM_ERROR__EXCEEDED_SLIPPAGE]: `Exceeded slippage tolerance`,
    [AMM_ERROR__EXCEED_MAX_A_CHANGES]: `Exceed max amplification changes`,
    [AMM_ERROR__EXCEED_MAX_FEE_BPS]: `Exceeded max fee bps`,
    [AMM_ERROR__FAULTY_LP_MINT]: `LP mint authority must be 'A' vault lp, without freeze authority, and 0 supply`,
    [AMM_ERROR__FEE_CALCULATION_FAILURE]: `Fee calculation failure`,
    [AMM_ERROR__IDENTICAL_SOURCE_DESTINATION]: `Identical user source and destination token account`,
    [AMM_ERROR__INSUFFICIENT_SNAPSHOT]: `Insufficient virtual price snapshot`,
    [AMM_ERROR__INVALID_ACTIVATION_DURATION]: `Invalid activation duration`,
    [AMM_ERROR__INVALID_ACTIVATION_POINT]: `Invalid activation point`,
    [AMM_ERROR__INVALID_ACTIVATION_TYPE]: `Invalid activation type`,
    [AMM_ERROR__INVALID_ADMIN]: `Invalid admin`,
    [AMM_ERROR__INVALID_ADMIN_ACCOUNT]: `Invalid admin account`,
    [AMM_ERROR__INVALID_AMPLIFICATION]: `Amplification is invalid`,
    [AMM_ERROR__INVALID_APY_ACCOUNT]: `Invalid APY account`,
    [AMM_ERROR__INVALID_AUTHORITY_TO_CREATE_THE_POOL]: `Invalid authority to create the pool`,
    [AMM_ERROR__INVALID_CALCULATION]: `Invalid curve calculation`,
    [AMM_ERROR__INVALID_DEPEG_INFORMATION]: `Invalid depeg information`,
    [AMM_ERROR__INVALID_DEPOSIT_AMOUNT]: `Invalid deposit amount`,
    [AMM_ERROR__INVALID_FEE]: `Invalid fee setup`,
    [AMM_ERROR__INVALID_FEE_OWNER]: `Invalid fee owner`,
    [AMM_ERROR__INVALID_INVARIANT]: `Invalid invariant d`,
    [AMM_ERROR__INVALID_POOL_LP_MINT_ACCOUNT]: `Invalid pool lp mint account`,
    [AMM_ERROR__INVALID_POOL_TYPE]: `Invalid pool type`,
    [AMM_ERROR__INVALID_PROTOCOL_FEE_ACCOUNT]: `Invalid protocol fee account`,
    [AMM_ERROR__INVALID_QUOTE_MINT]: `Quote token must be SOL,USDC`,
    [AMM_ERROR__INVALID_REMAINING_ACCOUNTS]: `Invalid remaining account`,
    [AMM_ERROR__INVALID_REMAINING_ACCOUNTS_LEN]: `Invalid remaining accounts length`,
    [AMM_ERROR__INVALID_TOKEN_MULTIPLIER]: `Invalid token multiplier`,
    [AMM_ERROR__INVALID_VAULT_ACCOUNT]: `Invalid vault account`,
    [AMM_ERROR__INVALID_VAULT_LP_ACCOUNT]: `Invalid vault lp account`,
    [AMM_ERROR__MATH_OVERFLOW]: `Math operation overflow`,
    [AMM_ERROR__MIS_MATCHED_CURVE]: `New curve is mismatched with old curve`,
    [AMM_ERROR__MISMATCHED_DEPEG_MINT]: `Token mint B doesn't matches depeg type token mint`,
    [AMM_ERROR__MISMATCHED_LP_MINT]: `LP mint mismatched`,
    [AMM_ERROR__MISMATCHED_OWNER]: `Invalid lp token owner`,
    [AMM_ERROR__MISMATCHED_TOKEN_MINT]: `Token mint mismatched`,
    [AMM_ERROR__NON_DEPLETED_POOL]: `Pool is not depleted`,
    [AMM_ERROR__NON_UPDATABLE_CURVE]: `Current curve is non-updatable`,
    [AMM_ERROR__POOL_DISABLED]: `Pool disabled`,
    [AMM_ERROR__POOL_IS_NOT_LAUNCH_POOL]: `Pool is not launch pool`,
    [AMM_ERROR__POOL_IS_NOT_PERMISSIONED]: `Pool is not permissioned`,
    [AMM_ERROR__PRE_ACTIVATION_SWAP_STARTED]: `Pre activation swap window started`,
    [AMM_ERROR__SAME_ADMIN_ACCOUNT]: `Same admin account`,
    [AMM_ERROR__TYPE_CAST_FAILED]: `Type cast error`,
    [AMM_ERROR__UNABLE_TO_MODIFY_ACTIVATION_POINT]: `Unable to modify activation point`,
    [AMM_ERROR__UNSUPPORTED_OPERATION]: `Operation is not supported`,
    [AMM_ERROR__UPDATE_TIME_CONSTRAINT]: `Update time constraint violated`,
    [AMM_ERROR__ZERO_TRADING_TOKENS]: `Given pool token amount results in zero trading tokens`,
  };
}

export function getAmmErrorMessage(code: AmmError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (ammErrorMessages as Record<AmmError, string>)[code];
  }

  return 'Error message not available in production bundles.';
}

export function isAmmError<TProgramErrorCode extends AmmError>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    AMM_PROGRAM_ADDRESS,
    code
  );
}
