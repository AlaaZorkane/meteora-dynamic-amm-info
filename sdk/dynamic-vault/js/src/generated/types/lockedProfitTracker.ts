/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';

/** LockedProfitTracker struct */
export type LockedProfitTracker = {
  /** The total locked profit from the last report */
  lastUpdatedLockedProfit: bigint;
  /** The last timestamp (in seconds) rebalancing */
  lastReport: bigint;
  /** Rate per second of degradation */
  lockedProfitDegradation: bigint;
};

export type LockedProfitTrackerArgs = {
  /** The total locked profit from the last report */
  lastUpdatedLockedProfit: number | bigint;
  /** The last timestamp (in seconds) rebalancing */
  lastReport: number | bigint;
  /** Rate per second of degradation */
  lockedProfitDegradation: number | bigint;
};

export function getLockedProfitTrackerEncoder(): Encoder<LockedProfitTrackerArgs> {
  return getStructEncoder([
    ['lastUpdatedLockedProfit', getU64Encoder()],
    ['lastReport', getU64Encoder()],
    ['lockedProfitDegradation', getU64Encoder()],
  ]);
}

export function getLockedProfitTrackerDecoder(): Decoder<LockedProfitTracker> {
  return getStructDecoder([
    ['lastUpdatedLockedProfit', getU64Decoder()],
    ['lastReport', getU64Decoder()],
    ['lockedProfitDegradation', getU64Decoder()],
  ]);
}

export function getLockedProfitTrackerCodec(): Codec<
  LockedProfitTrackerArgs,
  LockedProfitTracker
> {
  return combineCodec(
    getLockedProfitTrackerEncoder(),
    getLockedProfitTrackerDecoder()
  );
}
